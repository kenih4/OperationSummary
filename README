

やり方：
1.  python getGunHvOffTime_LOCALTEST.py
    を実行すると\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\計画時間.xlsxを基に計画時間.xlsxを作成している
    マクロいろいろ.xlsmが立ち上がるので、リボンからマクロ「cp_paste_KEIKAKUZIKAN_UNTENZYOKYOSYUKEI()」を実行する

2.  python getBlFaultSummary_LOCALTEST.py
    マクロいろいろ.xlsmが立ち上がるので、リボンからマクロ「cp_paste_faulttxt_UNTENZYOKYOSYUKEI()」を実行する

3.  SACLA運転状況集計BL*.xlsmの利用時間(User)シートにエネルギーなどを手動入力
    http://saclaopr19.spring8.or.jp/~summary/display_ui.html?sort=date%20desc%2Cstart%20desc&limit=0%2C1000&search_root=BL3#STATUS

3.  リボンから「Fault集計」を実行

4.  リボンから「運転集計_形式処理」を実行



2024/9/17 10:00
2024/9/30 10:00




=============================================================================================
.pycファイルだけ生成
python -m compileall example.py

=============================================================================================
ipynbからpyに変換する方法は
Powershellのターミナルで、
(base) PS C:\Users\kenichi\Documents\OperationSummary> jupyter nbconvert --to python BlFaultSummary.ipynb
[NbConvertApp] Converting notebook BlFaultSummary.ipynb to python
[NbConvertApp] Writing 8891 bytes to BlFaultSummary.py

Bashターミナルで、バックアップとのDiffをとると、バックアップのはBLの選択部分がコメントアウトされてるだけだったのでOK
$ vimdiff Bk/BlFaultSummary.py BlFaultSummary.py

＜ipynbからpyに変換済のも＞
GunHvOff.py
schedule.py
BlFaultSummary.py



